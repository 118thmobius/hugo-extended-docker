name: Push to Package Registry

on:
  release:
    types: [published]

env:
  DOCKER_BASE_NAME: docker.pkg.github.com/${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "${GITHUB_CONTEXT}"

    - name: Set env
      run: |
        echo "::set-env name=PKG_LATEST::${DOCKER_BASE_NAME}/latest:latest"
        echo "::set-env name=PKG_LATEST_MOD::${DOCKER_BASE_NAME}/latest-mod:latest"
        echo "::set-env name=PKG_TAG::${DOCKER_BASE_NAME}/${{ github.event.release.tag_name }}:latest"
        echo "::set-env name=PKG_TAG_MOD::${DOCKER_BASE_NAME}/${{ github.event.release.tag_name }}-mod:latest"

    - name: Build alpine image
      run: |
        docker build . --file Dockerfile.alpine --tag "${PKG_LATEST}"
        docker tag "${PKG_LATEST}" "${PKG_TAG}"

    - name: Build golang image
      run: |
        docker build . --file Dockerfile.golang --tag "${PKG_LATEST_MOD}"
        docker tag "${PKG_LATEST_MOD}" "${PKG_TAG_MOD}"

    - name: Login to Package Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u peaceiris --password-stdin

    - name: Push latest
      if: github.event.release.prerelease	== false
      run: |
        docker push "${PKG_LATEST}"
        docker push "${PKG_LATEST_MOD}"

    - name: Push tag
      run: |
        docker push "${PKG_TAG}"
        docker push "${PKG_TAG_MOD}"
